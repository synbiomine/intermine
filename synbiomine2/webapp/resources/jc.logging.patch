diff --git a/intermine/api/main/src/org/intermine/api/profile/TagManager.java b/intermine/api/main/src/org/intermine/api/profile/TagManager.java
index 2de2e8f..6126a91 100644
--- a/intermine/api/main/src/org/intermine/api/profile/TagManager.java
+++ b/intermine/api/main/src/org/intermine/api/profile/TagManager.java
@@ -444,6 +444,8 @@ public class TagManager
             cs.addConstraint(cc);
         }
         q.setConstraint(cs);
+        
+        LOG.info("Executing query [" + q.toString() + "]");
 
         ObjectStore userprofileOS = osWriter.getObjectStore();
         SingletonResults results = userprofileOS.executeSingleton(q);
diff --git a/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java b/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
index 73fdfbb..a11bc89 100644
--- a/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
+++ b/intermine/web/main/src/org/intermine/web/logic/results/ReportObject.java
@@ -780,7 +780,7 @@ public class ReportObject
             }
         }
         long endTime = System.currentTimeMillis();
-        LOG.info("TIME initialiseCollection " + fd.getName() + " took: " + (endTime - startTime)
+        LOG.info("TIME initialiseCollection " + objectType + "." + fd.getName() + " took: " + (endTime - startTime)
                 + "ms");
     }
 
diff --git a/intermine/web/main/src/org/intermine/web/struts/ReportController.java b/intermine/web/main/src/org/intermine/web/struts/ReportController.java
index b9ff1e4..5080668 100644
--- a/intermine/web/main/src/org/intermine/web/struts/ReportController.java
+++ b/intermine/web/main/src/org/intermine/web/struts/ReportController.java
@@ -286,13 +286,21 @@ public class ReportController extends InterMineAction
     public static void categoriseBasedOnTags(FieldDescriptor fd,
             String taggedType, DisplayField dispRef, Map<String, DisplayField> miscRefs,
             TagManager tagManager, String sup, Map<String, Map<String, DisplayField>>
-            placementRefsAndCollections, boolean isSuperUser) {
+            placementRefsAndCollections, boolean 
+            isSuperUser) {
+        
+        LOG.info(
+            "Requesting tags " + fd.getClassDescriptor().getUnqualifiedName() + "." + fd.getName() + ", " + taggedType + ", " + sup);
+        
         @SuppressWarnings("deprecation")
+        //LOG.info("Getting tag " + taggedType + " tag [" + tagName + "] for " + fd.getName());
         List<Tag> tags = tagManager.getTags(null, fd.getClassDescriptor()
                 .getUnqualifiedName()
                 + "." + fd.getName(), taggedType, sup);
+        
         for (Tag tag : tags) {
             String tagName = tag.getTagName();
+            LOG.info("Processing " + taggedType + " tag [" + tagName + "] for " + fd.getName());
             if (!isSuperUser && tagName.equals(TagNames.IM_HIDDEN)) {
                 //miscRefs.remove(fd.getName());
                 // Maybe it was added already to some placement and
diff --git a/synbiomine/webapp/resources/default-template-queries.xml b/synbiomine/webapp/resources/default-template-queries.xml
index 90a9402..2827fc0 100644
--- a/synbiomine/webapp/resources/default-template-queries.xml
+++ b/synbiomine/webapp/resources/default-template-queries.xml
@@ -259,6 +259,7 @@
   <tag name="im:aspect:Expression" objectIdentifier="Gene2Expression" type="template"/>
   <tag name="im:aspect:Expression" objectIdentifier="path2reactGenes" type="template"/>
 
+  <tag name="im:aspect:Function" objectIdentifier="Gene.eggNogCategories" type="collection"/>
   <tag name="im:aspect:Function" objectIdentifier="GeneProtDomain" type="template"/>
   <tag name="im:aspect:Function" objectIdentifier="GOgenes" type="template"/>
   <tag name="im:aspect:Function" objectIdentifier="DomainProtGene" type="template"/>
